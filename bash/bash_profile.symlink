#!/usr/bin/env bash
export DOTFILES=$HOME/.dotfiles

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export BASH_SILENCE_DEPRECATION_WARNING=1

#. $DOTFILES/bin/start-ssh-agent

red='\[\e[0;31m\]'
# RED='\[\e[1;31m\]'
# green='\[\e[0;32m\]'
# GREEN='\[\e[1;32m\]'
yellow='\[\e[0;33m\]'
# YELLOW='\[\e[1;33m\]'
# blue='\[\e[0;34m\]'
# BLUE='\[\e[1;34m\]'
# cyan='\[\e[0;36m\]'
# CYAN='\[\e[1;36m\]'
reset='\[\e[0m\]'

parse_git_branch(){ git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'; }
export PS1="\u[${yellow}\W${reset}]${red}\$(parse_git_branch)${reset}$ "
#export PS1="${red}\u@\h:${yellow}\W${red}$(parse_git_branch)${reset}$ "

export PAGER=`which less`
export EDITOR=`which vim`

export HISTCONTROL=ignoreboth:erasedups
export HISTSIZE=5000
export HISTFILESIZE=1000
export HISTIGNORE="&:ls:ll:la:l.:h:a:b:f:pwd:exit:c:x:clear"
export HISTTIMEFORMAT="[%DT%T] " 

shopt -s cdspell #fix spelling
shopt -s histappend # Append to history rather than overwrite
shopt -s checkwinsize   # Check window after each command
shopt -s dotglob    # files beginning with . to be returned in the results of path-name expansion.
shopt -s extglob # turn on extended globbing

# Tab complete for sudo
complete -cf sudo

#prevent overwriting files with cat
set -o noclobber

#stops ctrl+d from logging me out
set -o ignoreeof

REMOTE_PROMPT="\e[0;31m[\u@\h \W]\$ \e[m "

path_munge() {
    if [ -d "$1" ]; then
        PATH=${PATH//":$1:"/:} #delete all instances in the middle
        PATH=${PATH/%":$1"/} #delete any instance at the end
        PATH=${PATH/#"$1:"/} #delete any instance at the beginning
        if [ "$2" = "after" ] ; then
            PATH=$PATH:$1
        else
            PATH=$1:$PATH
        fi
    fi
}

# set path, make /usr/local/bin preference
# export PATH=`echo ":$PATH:" | sed -e "s#:/usr/local/bin:#:#g" -e "s/^://" -e "s/:$//"`
# export PATH=$DOTFILES/bin:/usr/local/bin:$PATH
export PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
export PATH=/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH

source_files () {
    local alias_file
    for alias_file in $DOTFILES/**/$1; do
        source "$alias_file"
    done
}

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
if [ -e ~/.localrc ] ; then
  source ~/.localrc
fi


# path_munge "/opt/homebrew/bin"
path_munge "$DOTFILES/bin"
eval "$(/opt/homebrew/bin/brew shellenv)"

ssh-add -A 2>/dev/null;

source_files "bash_aliases"
source_files "bash_env"

if [ -f $(brew --prefix)/etc/bash_completion ]; then
. $(brew --prefix)/etc/bash_completion
fi

source_files "bash_completion"

unset source_files

#[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

##
# Your previous /Users/iheitlager/.bash_profile file was backed up as /Users/iheitlager/.bash_profile.macports-saved_2023-09-08_at_21:26:56
##

# MacPorts Installer addition on 2023-09-08_at_21:26:56: adding an appropriate PATH variable for use with MacPorts.
export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
# Finished adapting your PATH environment variable for use with MacPorts.


# MacPorts Installer addition on 2023-09-08_at_21:26:56: adding an appropriate MANPATH variable for use with MacPorts.
export MANPATH="/opt/local/share/man:$MANPATH"
# Finished adapting your MANPATH environment variable for use with MacPorts.

SSH_ENV="$HOME/.ssh/agent-environment"

function start_agent {
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
}

if [ -f "${SSH_ENV}" ]; then
    . "${SSH_ENV}" > /dev/null
    #ps ${SSH_AGENT_PID} doesn't work under cywgin
    ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
        start_agent;
    }
else
    start_agent;
fi
