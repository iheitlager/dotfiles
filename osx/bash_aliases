#!/usr/bin/env bash

alias show='open -t' # open file in default texteditor (or TextEdit)
alias o='show'
alias uuid='python3 -c "import uuid;print(str(uuid.uuid4()))"'

alias pubkey="more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'" 

workdir () { cd $WORK_DIR/$1 ; }
alias cdw='workdir'

bu () { cp $1 ~/tmp/`basename $1`-`date +%Y%m%d%H%M`.backup ; }

alias chrome='open "$HOME/Applications/Google Chrome.app"'

# Change working directory to the top-most Finder window location
cdfinder () {
    cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')";
}
alias cdf='cdfinder'

refresh-chrome () {
  osascript -e 'tell application "Google Chrome" to reload active tab of window 1';
}
# Determine size of a file or total size of a directory
fs () {
    if du -b /dev/null > /dev/null 2>&1; then
        local arg=-sbh;
    else
        local arg=-sh;
    fi
    if [[ -n "$@" ]]; then
        du $arg -- "$@";
    else
        du $arg *;
    fi;
}

junk () { mv "$@" ~/.Trash/; } # move file to trash
alias j='junk'

search () { 
    if [ -n "$1" ] ; then
        grep "$@" -nR --exclude-dir .git . ;
    fi
} # search for pattern
alias s='search'
finder () {
    if [ -z "$1" ] ; then
        open -a Finder ./
    elif [ -f "$1" ] ; then
        open -R "$1"
    elif [ -d "$1" ] ; then
        open -a Finder "$1"
    fi
}
alias f='finder'

# extract archives -- usage: extract
extract () {
  if [ ! -f $1 ] ; then
    FF=~/Downloads/$1
  else
    FF=$1
  fi
  if [ -f $FF ] ; then
    case $FF in
      *.tar.bz2) tar xjvpf $FF ;;
      *.tar.gz) tar xzvpf $FF ;;
      *.bz2) bunzip2 $FF ;;
      *.rar) unrar e $FF ;;
      *.gz) gunzip $FF ;;
      *.tar) tar xvpf $FF ;;
      *.tbz2) tar xjvpf $FF ;;
      *.tgz) tar xzvpf $FF ;;
      *.zip) unzip "$FF" ;;
      *.Z) uncompress $FF ;;
      *.7z) 7z x $FF ;;
      *) echo "'$FF' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$FF' is not a valid file"
  fi
}
